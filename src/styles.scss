// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$bandwidth-checker-primary: mat.define-palette(mat.$indigo-palette);
$bandwidth-checker-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$bandwidth-checker-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$bandwidth-checker-theme: mat.define-light-theme(
  (
    color: (
      primary: $bandwidth-checker-primary,
      accent: $bandwidth-checker-accent,
      warn: $bandwidth-checker-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($bandwidth-checker-theme);

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Lato', sans-serif;
}

html,
body {
  height: 100%;
  margin: 0;
  font-family: 'Lato', sans-serif;
  background-color: #f8f8f8;
}

.mat-typography {
  font-family: 'Lato', sans-serif !important;
}

.error-snackbar {
  background: #f44336 !important;
  color: white !important;

  .mat-simple-snackbar-action {
    color: white !important;
  }
}

.warning-snackbar {
  background: #ff9800 !important;
  color: white !important;

  .mat-simple-snackbar-action {
    color: white !important;
  }
}

.delete-dialog-container {
  .mat-mdc-dialog-container {
    padding: 0;
    border-radius: 12px;
    overflow: hidden;
  }

  .mat-mdc-dialog-surface {
    border-radius: 12px;
  }
}

.cdk-overlay-dark-backdrop {
  background-color: rgba(0, 0, 0, 0.5) !important;
  backdrop-filter: blur(12px);
}

.mat-mdc-snack-bar-container {
  --mdc-snackbar-container-color: #323232;
  --mat-mdc-snack-bar-button-color: #ffffff;
  --mdc-snackbar-supporting-text-color: #ffffff;

  .mdc-snackbar__surface {
    border-radius: 0 !important;
    border: none !important;
    box-shadow:
      0 3px 5px -1px rgba(0, 0, 0, 0.2),
      0 6px 10px 0 rgba(0, 0, 0, 0.14),
      0 1px 18px 0 rgba(0, 0, 0, 0.12);
  }

  .mat-mdc-snack-bar-action {
    color: #ffffff;
  }

  .mdc-snackbar__label {
    padding: 14px 16px;
  }
}

.mat-mdc-snack-bar-container.error-snackbar {
  --mdc-snackbar-container-color: #323232;

  .mdc-snackbar__surface {
    border-radius: 0 !important;
    border-left: 4px solid #f44336 !important;
  }
}

.mat-mdc-snack-bar-container.warning-snackbar {
  --mdc-snackbar-container-color: #323232;

  .mdc-snackbar__surface {
    border-radius: 0 !important;
    border-left: 4px solid #ff9800 !important;
  }
}

.mat-mdc-snack-bar-container.success-snackbar {
  --mdc-snackbar-container-color: #323232;

  .mdc-snackbar__surface {
    border-radius: 0 !important;
    border-left: 4px solid #4caf50 !important;
  }
}

.mdc-snackbar {
  .mdc-snackbar__surface {
    &::before,
    &::after {
      display: none !important;
    }
  }
}
